{"program@execute@scalar-comparison-uchar": {"__type__": "TestResult", "command": "/home/orome/piglit/bin/cl-program-tester /home/orome/piglit/tests/cl/program/execute/scalar-comparison-uchar.cl", "environment": "PIGLIT_SOURCE_DIR=\"/home/orome/piglit\" PIGLIT_PLATFORM=\"mixed_glx_egl\"", "err": "", "out": "## Test: Uchar comparison (/home/orome/piglit/tests/cl/program/program-tester.c) ##\n\n# Platform supporting only version 1.1. Running test on that version.\n# Running on:\n#   Platform: Clover\n#   Device: AMD RAVEN (DRM 3.32.0, 5.2.2-gentoo, LLVM 10.0.0)\n#   OpenCL version: 2.0\n#   OpenCL C version: 1.1\n#   Build options:  -cl-std=CL1.1\nProgram has been built successfully\n> Running kernel test: num==num\nUsing kernel eq\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: num1==num2\nUsing kernel eq\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: num!=num\nUsing kernel neq\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: num1!=num2\nUsing kernel neq\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: num>num\nUsing kernel gt\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: big_num>small_num\nUsing kernel gt\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: small_num>big_num\nUsing kernel gt\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: num>=num\nUsing kernel gte\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: big_num>=small_num\nUsing kernel gte\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: small_num>=big_num\nUsing kernel gte\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: num<num\nUsing kernel lt\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: big_num<small_num\nUsing kernel lt\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: small_num<big_num\nUsing kernel lt\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: num<=num\nUsing kernel lte\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: big_num<=small_num\nUsing kernel lte\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n> Running kernel test: small_num<=big_num\nUsing kernel lte\nSetting kernel arguments...\nRunning the kernel...\nValidating results...\n Argument 0: PASS\n>> All of the tests PASSED\n# Result:\n", "result": "pass", "returncode": 0, "subtests": {"num==num": "pass", "num1==num2": "pass", "num!=num": "pass", "num1!=num2": "pass", "num>num": "pass", "big_num>small_num": "pass", "small_num>big_num": "pass", "num>=num": "pass", "big_num>=small_num": "pass", "small_num>=big_num": "pass", "num<num": "pass", "big_num<small_num": "pass", "small_num<big_num": "pass", "num<=num": "pass", "big_num<=small_num": "pass", "small_num<=big_num": "pass", "__type__": "Subtests"}, "time": {"start": 1563746033.7781656, "end": 1563746035.2710464, "__type__": "TimeAttribute"}, "exception": null, "traceback": null, "dmesg": "", "pid": [3473]}}